#!/usr/bin/perl
# Criar arquivos de configuracoes mrtg dinamicamente, efetuando associacao
#    entre fs's antigos e criando configuracoes para novos fs's
################################
# 2007/10/23 - pmoranga
#

use File::Copy;
use warnings;
use strict;
use Getopt::Std;

my %options = ();

getopts("d",\%options);

my $mrtgconf="/etc/mrtg/mrtg_nas.cfg";
my $mapconf="/export/scripts/mrtg_map.conf";
my $mrtg_work_dir="/export/mrtg/data";

my @newconf;

####### Arquivo de entrada ($CONF) ##########################
##new_fs                   old_fs
#/mnt/fs/to_graph
#/mnt/fs/another_fs_to_map_new /mnt/fs/another_fs_to_map_old


debug ( "mapconf: ". -C $mapconf );
debug ( "mrtgconf: ". -C $mrtgconf );
if ( ( -C $mapconf ) > ( -C $mrtgconf ) ) {
        print "Don't need update $mrtgconf newer than $mapconf!\n";
        exit 1;
}

open (CONF,"<$mapconf") or die "argh!! can't open $mapconf\n";

push(@newconf,<DATA>);

foreach my $line (<CONF>){
        chomp $line;
        if ( $line =~ m@^(/\S+)(\s+(/\S+)?\s*)?$@ ){
                push(@newconf, generate_conf($1,$3) );
        }
}
close (CONF);

open (MCFG,">$mrtgconf") or die "Can't open $mrtgconf for write" ;
foreach my $l (@newconf){
        print MCFG $l . "\n";
}
close (MCFG);

`indexmaker --title="Graficos FS" --section=title --show=month /etc/mrtg/mrtg_nas.cfg --pageend="<p>Pagina gerada dinamicamente pelo script /export/scripts/mrtg_map.pl, em \`date\`. Graficos antigos em <A HREF=/nas/html/>/nas/html/</A></p><BR><BR>" > /export/mrtg/nas/html/nas.html`;



exit 0;


# funcoes
sub generate_conf{
        my $fs = $_[0];
        my $oldfs = $_[1] if defined $_[1];

        my @conf;

        # caso datafile novo nao exista e exista antigo, copiar dados
        if ( ! -e datafile($fs) && defined $oldfs){
                copy datafile($oldfs), datafile($fs);
        }

        # recria arquivo de configuracao

        my $id = getId($fs);
        my $share = `df -P $fs | grep $fs | awk '{print \$1}'`;
        chomp $share;
        debug("id: $id fs: $fs share: $share");
        push(@conf,'## Autogenerated graph for '.$fs.' ##');
        push(@conf,'Target['.$id.']: `/export/scripts/mrtg_df.sh '.$fs.'`');
        push(@conf,'MaxBytes['.$id.']: 99999999');
        push(@conf,'Title['.$id.']: '.$share.' - Usage Area');
        push(@conf,'PageTop['.$id.']: Area utilizada e area total do filesystem '.
                   $share.' montado em '.$ENV{HOSTNAME}.':'.$fs.'');
        push(@conf,'PNGTitle['.$id.']: Space '.$share.'' );

        return @conf;
}

sub datafile{
        my $dbf = $mrtg_work_dir."/".getId($_[0]).".log";
        debug($dbf);
        return $dbf;
}

sub getId{
        my $id = $_[0];
        $id =~ s@/@_@g;
        debug("id: $id");
        return $id;
}

sub debug{
        print "$_[0]\n" if $options{d};
}

__DATA__

HtmlDir: /export/mrtg/nas/html
ImageDir: /export/mrtg/nas/image
LogDir: /export/mrtg/data
ThreshDir: /var/lib/mrtg
WithPeak[_]: wmy
Options[_]: nopercent,transparent,gauge,growright
kMG[_]: G,T,P
ShortLegend[_]: B
YLegend[_]: GBytes
LegendI[_]: &nbsp;Used:
LegendO[_]: &nbsp;Total:
MaxBytes[_]: 99999999
